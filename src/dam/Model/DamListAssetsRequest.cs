/*
 * Dam Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = dam.Client.OpenAPIDateConverter;

namespace dam.Model
{
    /// <summary>
    /// DamListAssetsRequest
    /// </summary>
    [DataContract(Name = "damListAssetsRequest")]
    public partial class DamListAssetsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DamListAssetsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DamListAssetsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DamListAssetsRequest" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId (required).</param>
        /// <param name="pageSize">The maximum number of assets to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 100; values above 100 will be coerced to 100..</param>
        /// <param name="pageToken">A page token, received from a previous &#x60;ListAssets&#x60; call. Provide this to retrieve the subsequent page.   When paginating, all other parameters provided to &#x60;ListAssets&#x60; must match the call that provided the page token..</param>
        public DamListAssetsRequest(string tenantId = default(string), long pageSize = default(long), string pageToken = default(string))
        {
            // to ensure "tenantId" is required (not null)
            if (tenantId == null)
            {
                throw new ArgumentNullException("tenantId is a required property for DamListAssetsRequest and cannot be null");
            }
            this.TenantId = tenantId;
            this.PageSize = pageSize;
            this.PageToken = pageToken;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", IsRequired = true, EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// The maximum number of assets to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 100; values above 100 will be coerced to 100.
        /// </summary>
        /// <value>The maximum number of assets to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 100; values above 100 will be coerced to 100.</value>
        [DataMember(Name = "pageSize", EmitDefaultValue = false)]
        public long PageSize { get; set; }

        /// <summary>
        /// A page token, received from a previous &#x60;ListAssets&#x60; call. Provide this to retrieve the subsequent page.   When paginating, all other parameters provided to &#x60;ListAssets&#x60; must match the call that provided the page token.
        /// </summary>
        /// <value>A page token, received from a previous &#x60;ListAssets&#x60; call. Provide this to retrieve the subsequent page.   When paginating, all other parameters provided to &#x60;ListAssets&#x60; must match the call that provided the page token.</value>
        [DataMember(Name = "pageToken", EmitDefaultValue = false)]
        public string PageToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DamListAssetsRequest {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  PageToken: ").Append(PageToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
